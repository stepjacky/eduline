<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${namespace}">
   
    ##List<T> findAll();
    <select id="findAll" resultType="${aliasname}">
        select * from ${table};
    </select>
    
    ##List<T> findList(QueryContext qc);
    
    <select id="findList" parameterType="querybuilder" resultType="${aliasname}">
        select * from ${table} where \${qc.where};
    </select>
    
    ##List<T> findPageList(int start, int offset);
	
	<select id="findPageList" resultType="${aliasname}">
	    select * from ${table} limit \${start},\${offset};
	</select>
	
	##T findById(S id);
	
	<select id="findById" parameterType="${pktypealias}" resultType="${aliasname}">
	   select * from ${table} where ${pkname}=\#{id};
	</select>
	
	##long counts();
	
	<select id="counts" resultType="long">
	   select count(*) from ${table};
	</select>	
	
	##List<T> findByQuery(QueryContext qc);
	<select id="findByQuery" resultType="${aliasname}">
       select * from ${table} where \${qc.where} limit \${start},\${offset};
    </select>
	##int countByQuery(QueryContext qc);
	
	<select id="countByQuery" parameterType="querybuilder" resultType="long">
	   select count(*) from ${table} where \${qc.where};
	</select>
	
	##S insert(T t);
     
    <insert id="insert" parameterType="${aliasname}">
       insert into ${table} (${fields}) values(${values})
       ON DUPLICATE KEY UPDATE
       ${updates};
    </insert> 
   
    
	##void delete(S id);
	
	<delete id="delete" parameterType="${pktypealias}">
	   delete from ${table} where ${pkname}=\#{id};
	</delete>
	
	##void deleteByQuery(QueryContext qc);

    <delete id="deleteByQuery" parameterType="querybuilder">
       delete from ${table} where \${qc.where};
    </delete>
    ##updatePartial(S id ,String props)
    <update id="updatePartial">
       update ${table} \${sets} where id=\#{id};
    </update>
    
</mapper>